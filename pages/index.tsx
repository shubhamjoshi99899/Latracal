import Container from "@mui/material/Container";
import { Dayjs } from "dayjs";
import Head from "next/head";
import { useEffect, useState } from "react";
import { Button, Grid, Paper, TextField, Typography } from "@mui/material";
import { LocalizationProvider } from "@mui/x-date-pickers/LocalizationProvider";
import { AdapterDayjs } from "@mui/x-date-pickers/AdapterDayjs";
import { DateTimePicker, TimePicker } from "@mui/x-date-pickers";
import StudentsTable from "../components/table";

export default function Home() {
  const [students, setStudents] = useState<any | []>([]);
  const [checkOutTime, setCheckOutTime] = useState<any | null>("");
  const [checkInTime, setCheckInTime] = useState<any | null>("");
  const [formView, setFormView] = useState<boolean>(true);
  const [student, setStudent] = useState<any | {}>({
    name: "",
    rollNumber: null,
  });

  function handleChange(event: any) {
    setStudent({
      ...student,
      checkInTime: checkInTime,
      checkOutTime: checkOutTime,
      [event.target.name]: event.target.value,
    });
  }
  const handleSubmit = (event: any) => {
    event.preventDefault();
    if (student) {
      let tempArray = [...students];
      tempArray.push({
        name: student?.name,
        rollNumber: parseInt(student?.rollNumber),
        checkInTime: checkInTime,
        checkOutTime: checkOutTime,
      });
      setStudents(tempArray);
      localStorage.setItem("students", JSON.stringify(tempArray));
    }
    setStudent({
      name: "",
      rollNumber: null,
      checkOutTime: "",
      checkInTime: "",
    });
    setFormView(false);
  };

  useEffect(() => {
    if (students?.length) {
      setFormView(false);
    }
  }, [students]);

  useEffect(() => {
    const data = localStorage.getItem("students");
    if (data) {
      setStudents(JSON.parse(data));
    }
    console.log(data);
  }, []);
  return (
    <>
      <Head>
        <title>Attendance App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container sx={{ py: 10 }}>
        {formView ? (
          <form onSubmit={handleSubmit}>
            <Paper elevation={5} sx={{ p: 5 }}>
              <Typography
                sx={{
                  fontSize: "22px",
                  fontWeight: 700,
                  textAlign: "center",
                  mb: 4,
                }}
              >
                Enter details of Student
              </Typography>
              <Grid
                container
                spacing={4}
                alignItems="center"
                justifyContent={"center"}
              >
                <Grid item xs={12} sm={12} md={6}>
                  <TextField
                    label="Student Name"
                    name="name"
                    value={student.name}
                    fullWidth
                    sx={{ height: "54px" }}
                    onChange={handleChange}
                  />
                </Grid>
                <Grid item xs={12} sm={12} md={6}>
                  <TextField
                    label="Roll Number"
                    name="rollNumber"
                    value={student.rollNumber}
                    fullWidth
                    type="number"
                    sx={{ height: "54px" }}
                    onChange={handleChange}
                  />
                </Grid>
                <Grid item xs={12} sm={12} md={6} sx={{ mb: 3 }}>
                  <LocalizationProvider dateAdapter={AdapterDayjs}>
                    <TimePicker
                      label="Check out time "
                      value={checkInTime}
                      onChange={(newValue) => {
                        setCheckInTime(newValue.$d);
                      }}
                      renderInput={(params) => (
                        <TextField name="checkInTime" fullWidth {...params} />
                      )}
                    />
                  </LocalizationProvider>
                </Grid>
                <Grid item xs={12} sm={12} md={6} sx={{ mb: 3 }}>
                  <LocalizationProvider dateAdapter={AdapterDayjs}>
                    <TimePicker
                      label="Check out time "
                      value={checkOutTime}
                      onChange={(newValue) => {
                        setCheckOutTime(newValue?.$d);
                      }}
                      renderInput={(params) => (
                        <TextField name="checkOutTime" fullWidth {...params} />
                      )}
                    />
                  </LocalizationProvider>
                </Grid>
                <Button
                  sx={{ textAlign: "center", mx: 2 }}
                  type="submit"
                  variant="contained"
                >
                  Submit
                </Button>
                <Button sx={{ textAlign: "center", mx: 2 }} variant="outlined">
                  Cancel
                </Button>
              </Grid>
            </Paper>
          </form>
        ) : (
          <StudentsTable
            handleClick={() => setFormView(true)}
            rows={students}
          />
        )}
      </Container>
    </>
  );
}
